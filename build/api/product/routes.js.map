{"version":3,"sources":["../../../src/api/product/routes.js"],"names":["productRouter","express","Router","get","req","res","productApi","getAll","data","status","send","id","params","product","success","message","post","error","body","create","newProduct","put","update","updatedProduct","remove"],"mappings":"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","sourcesContent":["import express from \"express\";\r\nimport { productApi } from \"./controller\";\r\nimport { productValidation } from \"./validation\";\r\n\r\nexport const productRouter = express.Router();\r\n\r\n// productRouter.use((req, res, next) => {\r\n//   console.log(\"Log request\");\r\n//   next();\r\n// });\r\n\r\nproductRouter.get(\"/\", function(req, res) {\r\n  productApi.getAll(data => {\r\n    res.status(200).send({ data });\r\n  });\r\n});\r\n\r\nproductRouter.get(\"/:id\", function(req, res) {\r\n  var id = req.params.id;\r\n  productApi.get(id, product => {\r\n    if (product) {\r\n      return res.status(200).send({ data: product });\r\n    }\r\n    return res.status(404).send({\r\n      success: \"false\",\r\n      message: \"product not found\"\r\n    });\r\n  });\r\n});\r\n\r\n// POST\r\nproductRouter.post(\"/\", function(req, res) {\r\n  const error = productValidation(req.body);\r\n\r\n  if (!!error) {\r\n    return res.status(400).send({\r\n      success: \"false\",\r\n      message: error\r\n    });\r\n  }\r\n\r\n  productApi.create(req.body, newProduct => {\r\n    res.status(201).send({\r\n      success: \"true\",\r\n      message: \"product added successfully\",\r\n      data: newProduct\r\n    });\r\n  });\r\n});\r\n\r\n// PUT\r\nproductRouter.put(\"/\", function(req, res) {\r\n  const error = productValidation(req.body);\r\n\r\n  if (!!error) {\r\n    return res.status(400).send({\r\n      success: \"false\",\r\n      message: error\r\n    });\r\n  }\r\n\r\n  productApi.update(req.body, updatedProduct => {\r\n    res.status(201).send({\r\n      success: \"true\",\r\n      message: \"product updated successfully\",\r\n      data: updatedProduct\r\n    });\r\n  });\r\n});\r\n\r\n// DELETE\r\nproductRouter.delete(\"/:id\", function(req, res) {\r\n  const id = req.params.id;\r\n  productApi.remove(id, () => {\r\n    return res.status(200).send({\r\n      success: \"true\",\r\n      message: \"product deleted successfully\"\r\n    });\r\n  });\r\n});\r\n"],"file":"routes.js"}